name: Performance checks on ubuntu.com

on: [push, pull_request]

env:
  THRESHOLD: 70
  FAILURE_COUNT: 0

jobs:
  perf-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Running performance checks on the homepage
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com"
          threshold: $THRESHOLD
          strategy: desktop
        id: homepage
      - name: Track homepage failure
        if: steps.homepage.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the desktop overview page
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/desktop"
          threshold: $THRESHOLD
          strategy: desktop
        id: desktop
      - name: Track desktop failure
        if: steps.desktop.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the download overview page
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/download"
          threshold: $THRESHOLD
          strategy: desktop
        id: download
      - name: Track download failure
        if: steps.download.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the blog
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/blog"
          threshold: $THRESHOLD
          strategy: desktop
        id: blog
      - name: Track blog failure
        if: steps.blog.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the openstack overview
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/openstack"
          threshold: $THRESHOLD
          strategy: desktop
        id: openstack
      - name: Track openstack failure
        if: steps.openstack.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the kubernetes overview
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/kubernetes"
          threshold: $THRESHOLD
          strategy: desktop
        id: kubernetes
      - name: Track kubernetes failure
        if: steps.kubernetes.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the managed overview
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/managed"
          threshold: $THRESHOLD
          strategy: desktop
        id: managed
      - name: Track managed failure
        if: steps.managed.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the ai overview
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/ai"
          threshold: $THRESHOLD
          strategy: desktop
        id: ai
      - name: Track ai failure
        if: steps.ai.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the robotics overview
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/robotics"
          threshold: $THRESHOLD
          strategy: desktop
        id: robotics
      - name: Track robotics failure
        if: steps.robotics.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the core overview
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/core"
          threshold: $THRESHOLD
          strategy: desktop
        id: core
      - name: Track core failure
        if: steps.core.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the cloud overview
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/cloud"
          threshold: $THRESHOLD
          strategy: desktop
        id: cloud
      - name: Track cloud failure
        if: steps.cloud.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on the tutorials overview
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/tutorials"
          threshold: $THRESHOLD
          strategy: desktop
        id: tutorials
      - name: Track tutorials failure
        if: steps.tutorials.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Running performance checks on a tutorial
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/tutorials/how-to-upgrade-ubuntu-lts-to-ubuntu-pro-on-aws-using-aws-license-manager#1-overview"
          threshold: $THRESHOLD
          strategy: desktop
        id: tutorial
      - name: Track tutorial failure
        if: steps.tutorial.outcome == 'failure'
        run: echo "FAILURE_COUNT=$((FAILURE_COUNT + 1))" >> $GITHUB_ENV

      - name: Check for any failures
        if: env.FAILURE_COUNT > 0
        run: |
          echo "Performance checks failed for $FAILURE_COUNT page(s)."
          exit 1

      - name: Send message on failure
        if: env.FAILURE_COUNT > 0
        run: curl -X POST -F "workflow=${GITHUB_WORKFLOW}" -F "repo_name=${GITHUB_REPOSITORY}" -F "action_id=${GITHUB_RUN_ID}" ${{ secrets.BOT_URL }}?room=web--design
