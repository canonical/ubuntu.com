name: Performance checks on ubuntu.com

on:
  schedule:
    - cron: "20 7 * * 1"
  workflow_dispatch:

env:
  THRESHOLD: 70

jobs:
  perf-checks:
    if: github.repository == 'canonical/ubuntu.com'
    runs-on: ubuntu-latest

    steps:
      - name: Running performance checks on the homepage
        id: homepage
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the desktop overview page
        id: desktop
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/desktop"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the download overview page
        id: download
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/download"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the blog
        id: blog
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/blog"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the openstack overview
        id: openstack
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/openstack"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the kubernetes overview
        id: kubernetes
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/kubernetes"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the managed overview
        id: managed
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/managed"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the ai overview
        id: ai
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/ai"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the robotics overview
        id: robotics
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/robotics"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the core overview
        id: core
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/core"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the cloud overview
        id: cloud
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/cloud"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on the tutorials overview
        id: tutorials
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/tutorials"
          threshold: $THRESHOLD
          strategy: desktop
      - name: Running performance checks on a tutorial
        id: tutorial-example
        continue-on-error: true
        uses: jakepartusch/psi-action@v1.3
        with:
          key: ${{ secrets.PSI_API_KEY }}
          url: "https://ubuntu.com/tutorials/how-to-upgrade-ubuntu-lts-to-ubuntu-pro-on-aws-using-aws-license-manager#1-overview"
          threshold: $THRESHOLD
          strategy: desktop

      - name: Check overall results
        run: |
          failed_checks=""
          
          if [ "${{ steps.homepage.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks homepage"
          fi
          if [ "${{ steps.desktop.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks desktop"
          fi
          if [ "${{ steps.download.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks download"
          fi
          if [ "${{ steps.blog.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks blog"
          fi
          if [ "${{ steps.openstack.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks openstack"
          fi
          if [ "${{ steps.kubernetes.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks kubernetes"
          fi
          if [ "${{ steps.managed.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks managed"
          fi
          if [ "${{ steps.ai.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks ai"
          fi
          if [ "${{ steps.robotics.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks robotics"
          fi
          if [ "${{ steps.core.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks core"
          fi
          if [ "${{ steps.cloud.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks cloud"
          fi
          if [ "${{ steps.tutorials.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks tutorials"
          fi
          if [ "${{ steps.tutorial-example.outcome }}" = "failure" ]; then
            failed_checks="$failed_checks tutorial-example"
          fi
          
          if [ -n "$failed_checks" ]; then
            echo "Performance checks failed for:$failed_checks"
            echo "FAILED_CHECKS=$failed_checks" >> $GITHUB_ENV
            exit 1
          else
            echo "All performance checks passed!"
          fi

      - name: Send message on failure
        if: failure()
        run: curl -X POST -F "workflow=${GITHUB_WORKFLOW}" -F "repo_name=${GITHUB_REPOSITORY}" -F "action_id=${GITHUB_RUN_ID}" ${{ secrets.BOT_URL }}?room=web-design
